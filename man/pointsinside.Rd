% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/hxsurf.R
\name{pointsinside}
\alias{pointsinside}
\alias{pointsinside.default}
\title{Find which points of an object are inside a surface}
\usage{
pointsinside(x, surf, ...)

\method{pointsinside}{default}(x, surf, ..., rval = c("logical", "distance",
  "mesh3d"))
}
\arguments{
\item{x}{an object with 3D points.}

\item{surf}{The reference surface - either a \code{mesh3d} object or any
object that can be converted using \code{as.mesh3d} including
\code{hxsurf} and \code{ashape3d} objects.}

\item{...}{additional arguments for methods, eventually passed to as.mesh3d.}

\item{rval}{what to return.}
}
\value{
A vector of logical values or distances (positive inside, negative
  outside) equal to the number of points in x or the \code{mesh3d} object
  returned by \code{Rvcg::vcgClostKD}.
}
\description{
Find which points of an object are inside a surface
}
\details{
Note that \code{hxsurf} surface objects will be converted to 
  \code{mesh3d} before being passed to \code{Rvcg::vcgClostKD}, so if you are 
  testing repeatedly against the same surface, it may make sense to 
  pre-convert.
  
}
\examples{
# check if the vertices in these neurons are inside the mushroom body
# surface object
inout=pointsinside(kcs20, surf=MBL.surf)
table(inout)

# be a bit more lenient and include points less than 5 microns from surface
inout5=pointsinside(kcs20, surf=MBL.surf, rval='distance') > -5
table(inout5)
\donttest{
# show which points are in or out
points3d(xyzmatrix(kcs20), col=ifelse(inout5, 'red', 'black'))
plot3d(MBL.surf, alpha=.3)
}
}
